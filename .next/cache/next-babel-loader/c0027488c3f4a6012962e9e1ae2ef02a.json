{"ast":null,"code":"var _jsxFileName = \"/Users/tusshukl/_/Dev/rickAndMorty/src/components/Header/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styles from './header.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '@fortawesome/fontawesome-svg-core/styles.css';\nconst __Dark_Theme_Key = '__dark';\nexport const __Dark_Theme_Name = 'theme_dark';\n\nconst Header = () => {\n  React.useEffect(() => {\n    const lsItem = localStorage.getItem(__Dark_Theme_Key);\n    console.log('ls val: ', lsItem);\n    const isDark = localStorage.getItem(__Dark_Theme_Key) === 'true';\n    console.log('is dark', isDark);\n    const existingClasses = document.documentElement.className;\n\n    if (isDark) {\n      const newClasses = (existingClasses.trim() + ' ' + __Dark_Theme_Name).trim();\n\n      document.documentElement.className = newClasses;\n    }\n  });\n  const [isDark, setDark] = React.useState(false);\n\n  const addClass = (src, val) => {\n    const _src = src.length ? src.trim() + ' ' : '';\n\n    return _src + val;\n  };\n\n  const removeClass = (src, val) => {\n    return src.length ? src.replace(new RegExp(__Dark_Theme_Name, 'gi'), '') : '';\n  };\n\n  const themeToggle = () => {\n    const existingClasses = document.documentElement.className;\n    const isDarkTheme = existingClasses.indexOf(__Dark_Theme_Name) > -1;\n    localStorage.setItem(__Dark_Theme_Key, JSON.stringify(!isDarkTheme));\n    setDark(!isDarkTheme);\n    document.documentElement.className = isDarkTheme ? removeClass(existingClasses, __Dark_Theme_Name) : addClass(existingClasses, __Dark_Theme_Name);\n  };\n\n  const toggleIcon = isDark ? 'toggle-on' : 'toggle-off';\n  return __jsx(\"header\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Rick \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"And\"), \" Morty\"), __jsx(FontAwesomeIcon, {\n    className: styles.toggle,\n    onClick: themeToggle,\n    icon: toggleIcon,\n    role: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/tusshukl/_/Dev/rickAndMorty/src/components/Header/index.tsx"],"names":["React","styles","FontAwesomeIcon","__Dark_Theme_Key","__Dark_Theme_Name","Header","useEffect","lsItem","localStorage","getItem","console","log","isDark","existingClasses","document","documentElement","className","newClasses","trim","setDark","useState","addClass","src","val","_src","length","removeClass","replace","RegExp","themeToggle","isDarkTheme","indexOf","setItem","JSON","stringify","toggleIcon","header","toggle"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAO,8CAAP;AAEA,MAAMC,gBAAgB,GAAG,QAAzB;AACA,OAAO,MAAMC,iBAAiB,GAAG,YAA1B;;AAEP,MAAMC,MAAM,GAAG,MAAM;AACnBL,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpB,UAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqBN,gBAArB,CAAf;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,MAAxB;AACA,UAAMK,MAAM,GAAGJ,YAAY,CAACC,OAAb,CAAqBN,gBAArB,MAA2C,MAA1D;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,MAAvB;AACA,UAAMC,eAAe,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,SAAjD;;AAEA,QAAGJ,MAAH,EAAW;AACT,YAAMK,UAAU,GAAG,CAACJ,eAAe,CAACK,IAAhB,KAAyB,GAAzB,GAA+Bd,iBAAhC,EAAmDc,IAAnD,EAAnB;;AACAJ,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAqCC,UAArC;AACD;AACF,GAXD;AAaA,QAAM,CAACL,MAAD,EAASO,OAAT,IAAoBnB,KAAK,CAACoB,QAAN,CAAe,KAAf,CAA1B;;AAEA,QAAMC,QAAQ,GAAG,CAACC,GAAD,EAAcC,GAAd,KAAsC;AACrD,UAAMC,IAAI,GAAGF,GAAG,CAACG,MAAJ,GAAcH,GAAG,CAACJ,IAAJ,EAAD,GAAe,GAA5B,GAAkC,EAA/C;;AACA,WAAOM,IAAI,GAAGD,GAAd;AACD,GAHD;;AAKA,QAAMG,WAAW,GAAG,CAACJ,GAAD,EAAcC,GAAd,KAAsC;AACxD,WAAOD,GAAG,CAACG,MAAJ,GAAaH,GAAG,CAACK,OAAJ,CAAY,IAAIC,MAAJ,CAAWxB,iBAAX,EAA8B,IAA9B,CAAZ,EAAiD,EAAjD,CAAb,GAAoE,EAA3E;AACD,GAFD;;AAIA,QAAMyB,WAAW,GAAG,MAAW;AAC7B,UAAMhB,eAAe,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,SAAjD;AACA,UAAMc,WAAW,GAAGjB,eAAe,CAACkB,OAAhB,CAAwB3B,iBAAxB,IAA6C,CAAC,CAAlE;AACAI,IAAAA,YAAY,CAACwB,OAAb,CAAqB7B,gBAArB,EAAuC8B,IAAI,CAACC,SAAL,CAAe,CAACJ,WAAhB,CAAvC;AACAX,IAAAA,OAAO,CAAC,CAACW,WAAF,CAAP;AAEAhB,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAqCc,WAAW,GAC9CJ,WAAW,CAACb,eAAD,EAAkBT,iBAAlB,CADmC,GAE9CiB,QAAQ,CAACR,eAAD,EAAkBT,iBAAlB,CAFV;AAGD,GATD;;AAWA,QAAM+B,UAAU,GAAGvB,MAAM,GAAG,WAAH,GAAiB,YAA1C;AAEA,SACE;AAAQ,IAAA,SAAS,EAAEX,MAAM,CAACmC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAV,WADF,EAEE,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAEnC,MAAM,CAACoC,MAAnC;AAA2C,IAAA,OAAO,EAAER,WAApD;AAAiE,IAAA,IAAI,EAAEM,UAAvE;AAAmF,IAAA,IAAI,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA5CD;;AA8CA,eAAe9B,MAAf","sourcesContent":["import React from 'react'\nimport styles from './header.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '@fortawesome/fontawesome-svg-core/styles.css';\n\nconst __Dark_Theme_Key = '__dark';\nexport const __Dark_Theme_Name = 'theme_dark';\n\nconst Header = () => {\n  React.useEffect(() => {\n    const lsItem = localStorage.getItem(__Dark_Theme_Key);\n    console.log('ls val: ', lsItem);\n    const isDark = localStorage.getItem(__Dark_Theme_Key) === 'true'\n    console.log('is dark', isDark);\n    const existingClasses = document.documentElement.className;\n\n    if(isDark) {\n      const newClasses = (existingClasses.trim() + ' ' + __Dark_Theme_Name).trim()\n      document.documentElement.className = newClasses\n    }\n  })\n\n  const [isDark, setDark] = React.useState(false);\n\n  const addClass = (src: string, val: string): string => {\n    const _src = src.length ? (src.trim()) + ' ' : '';\n    return _src + val;\n  };\n\n  const removeClass = (src: string, val: string): string => {\n    return src.length ? src.replace(new RegExp(__Dark_Theme_Name, 'gi'), '') : '';\n  }\n\n  const themeToggle = ():void => {\n    const existingClasses = document.documentElement.className;\n    const isDarkTheme = existingClasses.indexOf(__Dark_Theme_Name) > -1;\n    localStorage.setItem(__Dark_Theme_Key, JSON.stringify(!isDarkTheme))\n    setDark(!isDarkTheme);\n\n    document.documentElement.className = isDarkTheme ?\n      removeClass(existingClasses, __Dark_Theme_Name) :\n      addClass(existingClasses, __Dark_Theme_Name)\n  }\n\n  const toggleIcon = isDark ? 'toggle-on' : 'toggle-off';\n\n  return (\n    <header className={styles.header}>\n      <div>Rick <span>And</span> Morty</div>\n      <FontAwesomeIcon className={styles.toggle} onClick={themeToggle} icon={toggleIcon} role='button' />\n    </header>\n  )\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}